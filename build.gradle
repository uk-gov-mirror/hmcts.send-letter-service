plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.flywaydb.flyway' version '7.7.1'
  id 'org.springframework.boot' version '2.4.4'
  id 'org.owasp.dependencycheck' version '6.1.5'
  id 'com.github.ben-manes.versions' version '0.36.0'
  id 'org.sonarqube' version '3.1.1'
  id 'info.solidsoft.pitest' version '1.6.0'
  id 'au.com.dius.pact' version '4.2.3'
}

flyway {
  url = System.getenv('FLYWAY_URL')
  user = System.getenv('FLYWAY_USER')
  password = System.getenv('FLYWAY_PASSWORD')
  baselineOnMigrate = true
  baselineVersion = '000'
}

group = 'uk.gov.hmcts.reform'
version = '0.1.0' // 0.1.0 marks migration to java 11

sourceCompatibility = 11
targetCompatibility = 11

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }

  contractTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/contractTest/java')
    }
    resources.srcDir file('src/contractTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

test {
  failFast = true
}

task functional(type: Test) {
  description = 'Runs functional tests.'
  group = 'Verification'

  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test) {
  description = 'Runs integration tests.'
  group = 'Verification'

  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath

  environment("FTP_PRIVATE_KEY", file('src/integrationTest/resources/keypair').text)
  environment("FTP_PUBLIC_KEY", file('src/integrationTest/resources/keypair.pub').text)
  environment("ENCRYPTION_PUBLIC_KEY", file('src/integrationTest/resources/encryption/pubkey.asc').text)

  failFast = true
}

task smoke(type: Test) {
  description = 'Runs Smoke tests.'
  group = 'Verification'
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

task contractTest(type: Test) {
  logger.lifecycle("Running contract Tests")
  useJUnitPlatform()
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath

}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.29'
  // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
  toolVersion = "6.17.0"
  ignoreFailures = true
  incrementalAnalysis = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination = file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
  afterEvaluate {
    getClassDirectories().from = getClassDirectories().files.collect {
      fileTree(dir: it, exclude: [
        'uk/gov/hmcts/reform/sendletter/config/**',
        '**/BasicLetterInfo.java'
      ])
    }
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport
sonarqube {
  properties {
    property "sonar.projectName", "Reform :: Send Letter Service 2.0"
    property "sonar.coverage.jacoco.xmlReportPaths", jacocoTestReport.reports.xml.destination.path
    property 'sonar.exclusions', "**/config/**, **/BasicLetterInfo.java"
  }
}

pitest {
  pitestVersion = '1.4.9'
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'
  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}

repositories {
  jcenter()
  // until new projects get to jcenter
  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }
  mavenLocal()
}

def versions = [
  bouncycastle: '1.64',
  junit: '5.7.1',
  junitPlatform: '1.7.1',
  reformLogging: '5.1.5',
  springfoxSwagger: '2.9.2',
  pact_version: '4.1.7'
]

ext["rest-assured.version"] = '4.3.0'

dependencyManagement {
  dependencies {
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '30.1.1-jre') {
      entry 'guava'
    }
    // force junit5 deps to use groovy v3 which fixes reflective call errors for java 11
    // rest assured 4.1 -> 4.3 jumps to groovy v3. junit v5.6 still on v2.5
    dependencySet(group: 'org.codehaus.groovy', version: '3.0.7') {
      entry 'groovy'
      entry 'groovy-json'
      entry 'groovy-xml'
    }
    //CVE-2019-14900
    dependencySet(group: 'org.hibernate', version: '5.4.30.Final') {
      entry 'hibernate-core'
    }
  }
}

dependencies {
  def withoutJunit4 = {
    exclude group: 'junit', module: 'junit'
  }

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-batch'
  implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'

  implementation group: 'org.flywaydb', name: 'flyway-core', version: '7.7.1'
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.19'

  implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: '4.22.1'
  implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: '4.22.1'

  implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

  implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '4.0.0'
  implementation group: 'uk.gov.hmcts.reform', name: 'reform-api-standards', version: '0.4.0'
  implementation group: 'uk.gov.hmcts.reform', name: 'pdf-generator', version: '1.0.2'

  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.7.RELEASE'

  implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '11.0'

  implementation group: 'com.hierynomus', name: 'sshj', version: '0.31.0'
  implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.23'
  implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.8'

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  implementation group: 'com.vladmihalcea', name: 'hibernate-types-5', version: '2.10.4'
  implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: versions.bouncycastle
  implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: versions.bouncycastle
  implementation group: 'org.bouncycastle', name: 'bcpg-jdk15on', version: versions.bouncycastle

  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  testImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
  testImplementation group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform

  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation group: 'com.icegreen', name: 'greenmail', version: '1.6.3', withoutJunit4
  testImplementation group: 'org.apache.commons', name: 'commons-email', version: '1.5'
  testImplementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
  testImplementation group: 'org.apache.pdfbox', name: 'preflight', version: '2.0.23', withoutJunit4
  testImplementation group: 'com.github.tomakehurst', name: 'wiremock-jre8', version: '2.27.0', withoutJunit4

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath
  integrationTestImplementation group: 'org.apache.sshd', name: 'sshd-scp', version: '2.6.0'
  integrationTestImplementation group: 'org.apache.sshd', name: 'sshd-sftp', version: '2.6.0'
  integrationTestImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.15.2'
  integrationTestImplementation group: 'org.awaitility', name: 'awaitility', version: '4.0.3', withoutJunit4

  smokeTestImplementation sourceSets.main.runtimeClasspath
  smokeTestImplementation sourceSets.test.runtimeClasspath
  smokeTestImplementation group: 'io.rest-assured', name: 'rest-assured'

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath
  functionalTestImplementation group: 'io.rest-assured', name: 'rest-assured'

  contractTestCompile group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
  contractTestCompile group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
  contractTestCompile group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version
  contractTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  contractTestCompile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.2'
  contractTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  contractTestImplementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.2'
  contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

  contractTestImplementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: versions.bouncycastle
  contractTestImplementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: versions.bouncycastle
  contractTestImplementation group: 'org.bouncycastle', name: 'bcpg-jdk15on', version: versions.bouncycastle

  contractTestImplementation group: 'uk.gov.hmcts.reform', name: 'pdf-generator', version: '1.0.2'
  contractTestImplementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.22'

  contractTestCompile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.2'
  contractTestCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  contractTestRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
}

processFunctionalTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

processIntegrationTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

mainClassName = 'uk.gov.hmcts.reform.sendletter.Application'

bootJar {
  getArchiveFileName().set(provider {
    'send-letter-service.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

import org.flywaydb.gradle.task.FlywayMigrateTask

task migratePostgresDatabase(type: FlywayMigrateTask) {
  baselineOnMigrate = true
  if (project.hasProperty("dburl")) {
    url = "jdbc:postgresql://${dburl}"
  }
}

task runProviderPactVerification(type: Test) {
  logger.lifecycle("Runs pact Tests")
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
}

runProviderPactVerification.dependsOn contractTest

runProviderPactVerification.finalizedBy pactVerify
